{"version":3,"sources":["hooks/http.hook.js","components/heroesList/heroesSlice.js","components/heroesListItem/HeroesListItem.js","components/spinner/Spinner.js","components/heroesList/HeroesList.js","components/heroesFilters/filtersSlice.js","store/index.js","components/heroesAddForm/HeroesAddForm.js","components/heroesFilters/HeroesFilters.js","components/app/App.js","index.js"],"names":["useHttp","request","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","heroesAdapter","createEntityAdapter","initialState","getInitialState","heroesLoadingStatus","fetchHeroes","createAsyncThunk","heroesSlice","createSlice","name","reducers","heroCreated","state","action","addOne","payload","heroDeleted","removeOne","extraReducers","builder","addCase","pending","fulfilled","setAll","rejected","addDefaultCase","actions","reducer","selectAll","getSelectors","heroes","filteredHeroesSelector","createSelector","filters","activeFilter","filter","item","element","heroesFetching","heroesFetched","heroesFetchingError","HeroesListItem","elementClassName","description","onDelete","className","src","alt","style","objectFit","onClick","type","aria-label","Spinner","role","HeroesList","filteredHeroes","useSelector","dispatch","useDispatch","useEffect","useCallback","id","then","console","log","catch","err","arr","elements","length","CSSTransition","timeout","classNames","map","props","TransitionGroup","component","filtersAdapter","filtersLoadingStatus","fetchFilters","filtersSlice","filtersChanged","filtersFetching","filtersFetched","filtersFetchingError","stringMiddleware","next","store","configureStore","middleware","getDefaultMiddleware","concat","devTools","process","HeroesAddForm","useState","heroName","setHeroName","heroDescr","setHeroDescr","heroElement","setHeroElement","getState","onSubmit","e","preventDefault","newHero","uuidv4","JSON","stringify","res","htmlFor","required","placeholder","value","onChange","target","height","label","renderFilters","HeroesFilters","btnClass","active","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f6fdc7f9.chunk.js","sourcesContent":["export const useHttp = () => {\n  const request = async (\n    url,\n    method = \"GET\",\n    body = null,\n    headers = { \"Content-Type\": \"application/json\" }\n  ) => {\n    try {\n      const response = await fetch(url, { method, body, headers });\n\n      if (!response.ok) {\n        throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n      }\n\n      const data = await response.json();\n\n      return data;\n    } catch (e) {\n      throw e;\n    }\n  };\n\n  return { request };\n};\n","import {\r\n  createSlice,\r\n  createAsyncThunk,\r\n  createEntityAdapter,\r\n  createSelector,\r\n} from \"@reduxjs/toolkit\";\r\nimport { useHttp } from \"../../hooks/http.hook\";\r\n\r\nconst heroesAdapter = createEntityAdapter();\r\n\r\nconst initialState = heroesAdapter.getInitialState({\r\n  heroesLoadingStatus: \"idle\",\r\n});\r\n\r\nexport const fetchHeroes = createAsyncThunk(\"heroes/fetchHeroes\", async () => {\r\n  const { request } = useHttp();\r\n  return await request(\"http://localhost:3001/heroes\");\r\n});\r\n\r\nconst heroesSlice = createSlice({\r\n  name: \"heroes\",\r\n  initialState,\r\n  reducers: {\r\n    heroCreated: (state, action) => {\r\n      heroesAdapter.addOne(state, action.payload);\r\n    },\r\n    heroDeleted: (state, action) => {\r\n      heroesAdapter.removeOne(state, action.payload);\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchHeroes.pending, (state) => {\r\n        state.heroesLoadingStatus = \"loading\";\r\n      })\r\n      .addCase(fetchHeroes.fulfilled, (state, action) => {\r\n        state.heroesLoadingStatus = \"idle\";\r\n        heroesAdapter.setAll(state, action.payload);\r\n      })\r\n      .addCase(fetchHeroes.rejected, (state) => {\r\n        state.heroesLoadingStatus = \"error\";\r\n      })\r\n      .addDefaultCase(() => {});\r\n  },\r\n});\r\n\r\nconst { actions, reducer } = heroesSlice;\r\n\r\nexport default reducer;\r\n\r\nconst { selectAll } = heroesAdapter.getSelectors((state) => state.heroes);\r\n\r\nexport const filteredHeroesSelector = createSelector(\r\n  (state) => state.filters.activeFilter,\r\n  selectAll,\r\n  (filter, heroes) => {\r\n    if (filter === \"all\") {\r\n      return heroes;\r\n    } else {\r\n      return heroes.filter((item) => item.element === filter);\r\n    }\r\n  }\r\n);\r\n\r\nexport const {\r\n  heroesFetching,\r\n  heroesFetched,\r\n  heroesFetchingError,\r\n  heroCreated,\r\n  heroDeleted,\r\n} = actions;\r\n","const HeroesListItem = ({ name, description, element, onDelete }) => {\n  let elementClassName;\n\n  switch (element) {\n    case \"fire\":\n      elementClassName = \"bg-danger bg-gradient\";\n      break;\n    case \"water\":\n      elementClassName = \"bg-primary bg-gradient\";\n      break;\n    case \"wind\":\n      elementClassName = \"bg-success bg-gradient\";\n      break;\n    case \"earth\":\n      elementClassName = \"bg-secondary bg-gradient\";\n      break;\n    default:\n      elementClassName = \"bg-warning bg-gradient\";\n  }\n\n  return (\n    <li\n      className={`card flex-row mb-4 shadow-lg text-white ${elementClassName}`}\n    >\n      <img\n        src=\"http://www.stpaulsteinbach.org/wp-content/uploads/2014/09/unknown-hero.jpg\"\n        className=\"img-fluid w-25 d-inline\"\n        alt=\"unknown hero\"\n        style={{ objectFit: \"cover\" }}\n      />\n      <div className=\"card-body\">\n        <h3 className=\"card-title\">{name}</h3>\n        <p className=\"card-text\">{description}</p>\n      </div>\n      <span\n        onClick={onDelete}\n        className=\"position-absolute top-0 start-100 translate-middle badge border rounded-pill bg-light\"\n      >\n        <button\n          type=\"button\"\n          className=\"btn-close btn-close\"\n          aria-label=\"Close\"\n        ></button>\n      </span>\n    </li>\n  );\n};\n\nexport default HeroesListItem;\n","\nconst Spinner = () => {\n    return (\n        <div className=\"spinner-border mx-auto mt-5\" role=\"status\">\n            <span className=\"visually-hidden\">Loading...</span>\n        </div>\n    )\n}\n\nexport default Spinner;","import { useHttp } from \"../../hooks/http.hook\";\nimport { useEffect, useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\n\nimport {\n  heroDeleted,\n  fetchHeroes,\n  filteredHeroesSelector,\n} from \"./heroesSlice\";\n\nimport HeroesListItem from \"../heroesListItem/HeroesListItem\";\nimport Spinner from \"../spinner/Spinner\";\n\nimport \"./heroesList.scss\";\n\nconst HeroesList = () => {\n  const filteredHeroes = useSelector(filteredHeroesSelector);\n  const heroesLoadingStatus = useSelector(\n    (state) => state.heroes.heroesLoadingStatus\n  );\n  const dispatch = useDispatch();\n  const { request } = useHttp();\n\n  useEffect(() => {\n    dispatch(fetchHeroes());\n    // eslint-disable-next-line\n  }, []);\n\n  const onDelete = useCallback(\n    (id) => {\n      request(`http://localhost:3001/heroes/${id}`, \"DELETE\")\n        .then((data) => console.log(data, \"Deleted\"))\n        .then(dispatch(heroDeleted(id)))\n        .catch((err) => console.log(err));\n      // eslint-disable-next-line\n    },\n    [request]\n  );\n\n  if (heroesLoadingStatus === \"loading\") {\n    return <Spinner />;\n  } else if (heroesLoadingStatus === \"error\") {\n    return <h5 className=\"text-center mt-5\">Ошибка загрузки</h5>;\n  }\n\n  const renderHeroesList = (arr) => {\n    if (arr.length === 0) {\n      return (\n        <CSSTransition timeout={0} classNames=\"hero\">\n          <h5 className=\"text-center mt-5\">Героев пока нет</h5>\n        </CSSTransition>\n      );\n    }\n\n    return arr.map(({ id, ...props }) => {\n      return (\n        <CSSTransition key={id} timeout={500} classNames=\"hero\">\n          <HeroesListItem {...props} onDelete={() => onDelete(id)} />\n        </CSSTransition>\n      );\n    });\n  };\n\n  const elements = renderHeroesList(filteredHeroes);\n  return <TransitionGroup component=\"ul\">{elements}</TransitionGroup>;\n};\n\nexport default HeroesList;\n","import {\r\n  createSlice,\r\n  createAsyncThunk,\r\n  createEntityAdapter,\r\n} from \"@reduxjs/toolkit\";\r\nimport { useHttp } from \"../../hooks/http.hook\";\r\n\r\nconst filtersAdapter = createEntityAdapter();\r\n\r\nconst initialState = filtersAdapter.getInitialState({\r\n  filtersLoadingStatus: \"idle\",\r\n  activeFilter: \"all\",\r\n});\r\n\r\nexport const fetchFilters = createAsyncThunk(\r\n  \"filters/fetchFilters\",\r\n  async () => {\r\n    const { request } = useHttp();\r\n    return await request(\"http://localhost:3001/filters\");\r\n  }\r\n);\r\n\r\nconst filtersSlice = createSlice({\r\n  name: \"filters\",\r\n  initialState,\r\n  reducers: {\r\n    filtersChanged: (state, action) => {\r\n      state.activeFilter = action.payload;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchFilters.pending, (state) => {\r\n        state.filtersLoadingStatus = \"loading\";\r\n      })\r\n      .addCase(fetchFilters.fulfilled, (state, action) => {\r\n        state.filtersLoadingStatus = \"idle\";\r\n        filtersAdapter.setAll(state, action.payload);\r\n      })\r\n      .addCase(fetchFilters.rejected, (state) => {\r\n        state.filtersLoadingStatus = \"error\";\r\n      })\r\n      .addDefaultCase(() => {});\r\n  },\r\n});\r\n\r\nconst { actions, reducer } = filtersSlice;\r\n\r\nexport default reducer;\r\n\r\nexport const { selectAll } = filtersAdapter.getSelectors(\r\n  (state) => state.filters\r\n);\r\n\r\nexport const {\r\n  filtersFetching,\r\n  filtersFetched,\r\n  filtersFetchingError,\r\n  filtersChanged,\r\n} = actions;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport heroes from \"../components/heroesList/heroesSlice\";\nimport filters from \"../components/heroesFilters/filtersSlice\";\n\nconst stringMiddleware = () => (next) => (action) => {\n  if (typeof action === \"string\") {\n    return next({\n      type: action,\n    });\n  }\n  return next(action);\n};\n\nconst store = configureStore({\n  reducer: { heroes, filters },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware().concat(stringMiddleware),\n  devTools: process.env.NODE_ENV !== \"production\",\n});\n\nexport default store;\n","import { useHttp } from \"../../hooks/http.hook\";\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport store from \"../../store\";\n\nimport { selectAll } from \"../heroesFilters/filtersSlice\";\nimport { heroCreated } from \"../heroesList/heroesSlice\";\n\nconst HeroesAddForm = () => {\n  const [heroName, setHeroName] = useState(\"\");\n  const [heroDescr, setHeroDescr] = useState(\"\");\n  const [heroElement, setHeroElement] = useState(\"\");\n\n  const { filtersLoadingStatus } = useSelector((state) => state.filters);\n  const filters = selectAll(store.getState());\n  const dispatch = useDispatch();\n  const { request } = useHttp();\n\n  const onSubmitHandler = (e) => {\n    e.preventDefault();\n    const newHero = {\n      id: uuidv4(),\n      name: heroName,\n      description: heroDescr,\n      element: heroElement,\n    };\n\n    request(\"http://localhost:3001/heroes\", \"POST\", JSON.stringify(newHero))\n      .then((res) => console.log(res, \"Отправка успешна\"))\n      .then(dispatch(heroCreated(newHero)))\n      .catch((err) => console.log(err));\n\n    setHeroName(\"\");\n    setHeroDescr(\"\");\n    setHeroElement(\"\");\n  };\n\n  const renderFilters = (filters, status) => {\n    if (status === \"loading\") {\n      return <option>Загрузка элементов</option>;\n    } else if (status === \"error\") {\n      return <option>Ошибка загрузки</option>;\n    }\n\n    if (filters && filters.length > 0) {\n      return filters.map(({ name, label }) => {\n        // eslint-disable-next-line\n        if (name === \"all\") return;\n\n        return (\n          <option key={name} value={name}>\n            {label}\n          </option>\n        );\n      });\n    }\n  };\n\n  return (\n    <form className=\"border p-4 shadow-lg rounded\" onSubmit={onSubmitHandler}>\n      <div className=\"mb-3\">\n        <label htmlFor=\"name\" className=\"form-label fs-4\">\n          Имя нового героя\n        </label>\n        <input\n          required\n          type=\"text\"\n          name=\"name\"\n          className=\"form-control\"\n          id=\"name\"\n          placeholder=\"Как меня зовут?\"\n          value={heroName}\n          onChange={(e) => setHeroName(e.target.value)}\n        />\n      </div>\n\n      <div className=\"mb-3\">\n        <label htmlFor=\"text\" className=\"form-label fs-4\">\n          Описание\n        </label>\n        <textarea\n          required\n          name=\"text\"\n          className=\"form-control\"\n          id=\"text\"\n          placeholder=\"Что я умею?\"\n          style={{ height: \"130px\" }}\n          value={heroDescr}\n          onChange={(e) => setHeroDescr(e.target.value)}\n        />\n      </div>\n\n      <div className=\"mb-3\">\n        <label htmlFor=\"element\" className=\"form-label\">\n          Выбрать элемент героя\n        </label>\n        <select\n          required\n          className=\"form-select\"\n          id=\"element\"\n          name=\"element\"\n          value={heroElement}\n          onChange={(e) => setHeroElement(e.target.value)}\n        >\n          <option value=\"\">Я владею элементом...</option>\n          {renderFilters(filters, filtersLoadingStatus)}\n        </select>\n      </div>\n\n      <button type=\"submit\" className=\"btn btn-primary\">\n        Создать\n      </button>\n    </form>\n  );\n};\n\nexport default HeroesAddForm;\n","import { useHttp } from \"../../hooks/http.hook\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport classNames from \"classnames\";\nimport store from \"../../store\";\n\nimport { filtersChanged, fetchFilters, selectAll } from \"./filtersSlice\";\nimport Spinner from \"../spinner/Spinner\";\n\nconst HeroesFilters = () => {\n  const { filtersLoadingStatus, activeFilter } = useSelector(\n    (state) => state.filters\n  );\n  const filters = selectAll(store.getState());\n  const dispatch = useDispatch();\n  const { request } = useHttp();\n\n  useEffect(() => {\n    dispatch(fetchFilters(request));\n\n    // eslint-disable-next-line\n  }, []);\n\n  if (filtersLoadingStatus === \"loading\") {\n    return <Spinner />;\n  } else if (filtersLoadingStatus === \"error\") {\n    return <h5 className=\"text-center mt-5\">Ошибка загрузки</h5>;\n  }\n\n  const renderFilters = (arr) => {\n    if (arr.length === 0) {\n      return <h5 className=\"text-center mt-5\">Фильтры не найдены</h5>;\n    }\n\n    return arr.map(({ name, className, label }) => {\n      const btnClass = classNames(\"btn\", className, {\n        active: name === activeFilter,\n      });\n\n      return (\n        <button\n          key={name}\n          id={name}\n          className={btnClass}\n          onClick={() => dispatch(filtersChanged(name))}\n        >\n          {label}\n        </button>\n      );\n    });\n  };\n\n  const elements = renderFilters(filters);\n\n  return (\n    <div className=\"card shadow-lg mt-4\">\n      <div className=\"card-body\">\n        <p className=\"card-text\">Отфильтруйте героев по элементам</p>\n        <div className=\"btn-group\">{elements}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default HeroesFilters;\n","import HeroesList from '../heroesList/HeroesList';\nimport HeroesAddForm from '../heroesAddForm/HeroesAddForm';\nimport HeroesFilters from '../heroesFilters/HeroesFilters';\n\nimport './app.scss';\n\nconst App = () => {\n    \n    return (\n        <main className=\"app\">\n            <div className=\"content\">\n                <HeroesList/>\n                <div className=\"content__interactive\">\n                    <HeroesAddForm/>\n                    <HeroesFilters/>\n                </div>\n            </div>\n        </main>\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './components/app/App';\nimport store from './store';\n\nimport './styles/index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}